name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clean target directory on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          curl_insecure: true
          debug: true
          port: 22
          script: |
            rm -rf /.esmaili/src/backend
            mkdir -p /.esmaili/src/backend

      - name: Copy code to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          port: 22
          source: "./"
          target: "/.esmaili/src/backend"

      - name: Build & Deploy on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          port: 22
          script: |
            set -e
            cd /.esmaili/src/backend

            VERSION=$(jq -r .version package.json)
            IMAGE="atrsun-crm-backend:${VERSION}"
            echo "Image tag: $IMAGE"

            if ! docker image inspect "$IMAGE" >/dev/null 2>&1; then
              echo "Building $IMAGE"
              docker build -t "$IMAGE" .
            else
              echo "Image $IMAGE already exists, skip build."
            fi

            export IMAGE_TAG=${VERSION}
            export MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}
            export MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}

            CURRENT_IMAGE=$(docker service inspect backend_atrsun-backend --format '{{(index .Spec.TaskTemplate.ContainerSpec.Image)}}' 2>/dev/null || echo "")
            if [ "$CURRENT_IMAGE" = "$IMAGE" ]; then
              echo "Service already running $IMAGE, skip update."
              exit 0
            fi

            envsubst < /.esmaili/src/backend/stacks/stage-stack.yml | docker stack deploy --with-registry-auth -c - backend

            if docker service ls --format '{{.Name}}' | grep -q '^backend_atrsun-backend$'; then
              docker service scale backend_atrsun-backend=2
              echo "Forcing service update..."
              docker service update --force backend_atrsun-backend
              echo "Waiting 30 seconds after update..."
              sleep 60
              echo "Scaling back to 1 replica..."
              docker service scale backend_atrsun-backend=1
            fi
