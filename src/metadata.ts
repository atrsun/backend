/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/user/dtos/user.dto"]: await import("./modules/user/dtos/user.dto"),
        ["./modules/auth/dto/token-payload.dto"]: await import("./modules/auth/dto/token-payload.dto"),
        ["./modules/holoo/dtos/create-pre-invoice.dto"]: await import("./modules/holoo/dtos/create-pre-invoice.dto"),
        ["./constants/order"]: await import("./constants/order"),
        ["./constants/language-code"]: await import("./constants/language-code"),
        ["./common/dto/page-meta.dto"]: await import("./common/dto/page-meta.dto"),
        ["./modules/holoo/dtos/holoo-product.dto"]: await import("./modules/holoo/dtos/holoo-product.dto"),
        ["./modules/auth/dto/login-payload.dto"]: await import("./modules/auth/dto/login-payload.dto"),
        ["./modules/pre-invoice/dtos/pre-invoice.dto"]: await import("./modules/pre-invoice/dtos/pre-invoice.dto"),
        ["./modules/invoice/dtos/invoice.dto"]: await import("./modules/invoice/dtos/invoice.dto")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./common/abstract.entity"), { "AbstractEntity": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./common/dto/abstract.dto"), { "AbstractDto": { createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } } }], [import("./modules/user/dtos/user.dto"), { "UserDto": { Email: { required: false, type: () => String }, Code: { required: false, type: () => String }, Name: { required: false, type: () => String }, BedSarfasl: { required: false, type: () => String }, IsPurchaser: { required: false, type: () => Boolean }, IsSeller: { required: false, type: () => Boolean }, IsBlackList: { required: false, type: () => Boolean }, IsVaseteh: { required: false, type: () => Boolean }, VasetehPorsant: { required: false, type: () => Number }, Mandeh: { required: false, type: () => Number }, Credit: { required: false, type: () => Number }, Tel: { required: false, type: () => String }, Mobile: { required: false, type: () => String }, City: { required: false, type: () => String }, Ostan: { required: false, type: () => String }, Address: { required: false, type: () => String }, ErpCode: { required: false, type: () => String }, type: { required: false, type: () => Number }, IsActive: { required: false, type: () => Boolean }, selectedPriceType: { required: false, type: () => Number }, isAmer: { required: false, type: () => Boolean }, Vaseteh: { required: false, type: () => [Object] } } }], [import("./modules/user/user.entity"), { "UserEntity": { Email: { required: false, type: () => String }, Password: { required: false, type: () => String }, Code: { required: false, type: () => String }, Name: { required: false, type: () => String }, BedSarfasl: { required: false, type: () => String }, IsPurchaser: { required: false, type: () => Boolean }, IsSeller: { required: false, type: () => Boolean }, IsBlackList: { required: false, type: () => Boolean }, IsVaseteh: { required: false, type: () => Boolean }, VasetehPorsant: { required: false, type: () => Number }, Mandeh: { required: false, type: () => Number }, Credit: { required: false, type: () => Number }, Tel: { required: false, type: () => String }, Mobile: { required: false, type: () => String }, City: { required: false, type: () => String }, Ostan: { required: false, type: () => String }, Address: { required: false, type: () => String }, ErpCode: { required: false, type: () => String }, type: { required: false, type: () => Number }, IsActive: { required: false, type: () => Boolean }, selectedPriceType: { required: false, type: () => Number }, isAmer: { required: false, type: () => Boolean }, Vaseteh: { required: false, type: () => [Object] } } }], [import("./modules/holoo/dtos/filter-customer.dto"), { "FilterCustomerDto": { phone: { required: false, type: () => String }, name: { required: false, type: () => String } } }], [import("./common/dto/paginate.dto"), { "PaginationDto": { limit: { required: false, type: () => Number }, page: { required: false, type: () => Number } } }], [import("./modules/user/dtos/filter-user.dto"), { "FilterUserDto": { name: { required: true, type: () => String } } }], [import("./modules/holoo/dtos/holoo-product.dto"), { "HolooProductDto": { Code: { required: true, type: () => String }, Name: { required: true, type: () => String }, Few: { required: true, type: () => Number }, FewKarton: { required: true, type: () => Number }, FewSpd: { required: true, type: () => Number }, FewTak: { required: true, type: () => Number }, BuyPrice: { required: true, type: () => Number }, LastBuyPrice: { required: true, type: () => Number }, SellPrice: { required: true, type: () => Number }, SellPrice2: { required: true, type: () => Number }, SellPrice3: { required: true, type: () => Number }, SellPrice4: { required: true, type: () => Number }, SellPrice5: { required: true, type: () => Number }, SellPrice6: { required: true, type: () => Number }, SellPrice7: { required: true, type: () => Number }, SellPrice8: { required: true, type: () => Number }, SellPrice9: { required: true, type: () => Number }, SellPrice10: { required: true, type: () => Number }, SelPriceKarton: { required: true, type: () => Number }, CountInKarton: { required: true, type: () => Number }, CountInBasteh: { required: true, type: () => Number }, MainGroupName: { required: true, type: () => String }, MainGroupErpCode: { required: true, type: () => String }, SideGroupName: { required: true, type: () => String }, SideGroupErpCode: { required: true, type: () => String }, UnitErpCode: { required: true, type: () => Number }, EtebarTakhfifAz: { required: true, type: () => String }, EtebarTakhfifTa: { required: true, type: () => String }, Other1: { required: true, type: () => String }, Other2: { required: true, type: () => String }, DiscountPercent: { required: true, type: () => Number }, DiscountPrice: { required: true, type: () => Number }, ErpCode: { required: true, type: () => String } } }], [import("./modules/holoo/dtos/get-product-query.dto"), { "GetProductQuery": { name: { required: false, type: () => String }, code: { required: false, type: () => String }, erpcode: { required: false, type: () => String } } }], [import("./modules/holoo/dtos/holoo-customer.dto"), { "HolooCustomerDto": { EconomicId: { required: true, type: () => String }, IsPurchaser: { required: true, type: () => Boolean }, IsSeller: { required: true, type: () => Boolean }, IsBlackList: { required: true, type: () => Boolean }, IsVaseteh: { required: true, type: () => Boolean }, VasetehPorsant: { required: true, type: () => Number }, Mandeh: { required: true, type: () => Number }, Credit: { required: true, type: () => Number }, ErpCode: { required: true, type: () => String }, type: { required: true, type: () => Number }, IsActive: { required: true }, selectedPriceType: { required: true, type: () => Number }, isAmer: { required: true, type: () => Boolean }, Code: { required: false, type: () => String }, Name: { required: false, type: () => String }, BesSarfasl: { required: false, type: () => String }, Mobile: { required: false, type: () => String }, WebId: { required: false, type: () => String } } }], [import("./modules/holoo/dtos/get-costumer-address.dto"), { "GetCustomersAddressDto": { customerErpCode: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-login.dto"), { "UserLoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/token-payload.dto"), { "TokenPayloadDto": { expiresIn: { required: true, type: () => Number }, accessToken: { required: true, type: () => String } } }], [import("./modules/auth/dto/login-payload.dto"), { "LoginPayloadDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, token: { required: true, type: () => t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto } } }], [import("./modules/holoo/dtos/create-pre-invoice.dto"), { "ProductInfo": { product_variant_erpcode: { required: true, type: () => String }, quantity: { required: true, type: () => Number }, price: { required: true, type: () => Number }, discount_percent: { required: true, type: () => Number }, productName: { required: true, type: () => String }, productCode: { required: true, type: () => String } }, "CreatePreInvoiceDto": { productInfo: { required: true, type: () => [t["./modules/holoo/dtos/create-pre-invoice.dto"].ProductInfo] }, costumerErpCode: { required: true, type: () => String }, discountPercent: { required: true, type: () => Number } } }], [import("./modules/pre-invoice/dtos/pre-invoice.dto"), { "PreInvoiceDto": { Code: { required: false, type: () => String }, Type: { required: false, type: () => String }, SanadCode: { required: false, type: () => Number }, CustomerName: { required: false, type: () => String }, customerCodeC: { required: false, type: () => String }, Date: { required: false, type: () => String }, Time: { required: false, type: () => String }, SumNaghd: { required: false, type: () => Number }, SumCard: { required: false, type: () => Number }, SumNesiyeh: { required: false, type: () => Number }, SumDiscount: { required: false, type: () => Number }, SumCheck: { required: false, type: () => Number }, SumLevy: { required: false, type: () => Number }, SumScot: { required: false, type: () => Number }, SumPrice: { required: false, type: () => Number }, ErpCode: { required: false, type: () => String }, CustomerErpCode: { required: false, type: () => String }, TypeName: { required: false, type: () => String }, Detail: { required: false, type: () => [Object] }, totalPrice: { required: false, type: () => Number }, isConverted: { required: false, type: () => Boolean }, VasetErpCode: { required: false, type: () => String }, _id: { required: true, type: () => String } } }], [import("./modules/pre-invoice/pre-invoice.entity"), { "PreInvoiceEntity": { Code: { required: false, type: () => String }, Type: { required: false, type: () => String }, SanadCode: { required: false, type: () => Number }, CustomerName: { required: false, type: () => String }, customerCodeC: { required: false, type: () => String }, Date: { required: false, type: () => String }, Time: { required: false, type: () => String }, SumNaghd: { required: false, type: () => Number }, SumCard: { required: false, type: () => Number }, SumNesiyeh: { required: false, type: () => Number }, SumDiscount: { required: false, type: () => Number }, SumCheck: { required: false, type: () => Number }, SumLevy: { required: false, type: () => Number }, SumScot: { required: false, type: () => Number }, SumPrice: { required: false, type: () => Number }, ErpCode: { required: false, type: () => String }, VasetErpCode: { required: true, type: () => String }, CustomerErpCode: { required: false, type: () => String }, TypeName: { required: false, type: () => String }, totalPrice: { required: false, type: () => Number }, isConverted: { required: false, type: () => Boolean }, Detail: { required: true, type: () => [Object] } } }], [import("./modules/invoice/dtos/invoice.dto"), { "InvoiceDto": { Code: { required: false, type: () => Number }, Type: { required: false, type: () => String }, SanadCode: { required: false, type: () => Number }, CustomerName: { required: false, type: () => String }, customerCodeC: { required: false, type: () => String }, Date: { required: false, type: () => String }, Time: { required: false, type: () => String }, SumNaghd: { required: false, type: () => Number }, SumCard: { required: false, type: () => Number }, SumNesiyeh: { required: false, type: () => Number }, SumDiscount: { required: false, type: () => Number }, SumCheck: { required: false, type: () => Number }, SumLevy: { required: false, type: () => Number }, SumScot: { required: false, type: () => Number }, SumPrice: { required: false, type: () => Number }, ErpCode: { required: false, type: () => String }, CustomerErpCode: { required: false, type: () => String }, TypeName: { required: false, type: () => String }, totalPrice: { required: false, type: () => Number }, VasetErpCode: { required: false, type: () => String }, _id: { required: true, type: () => String }, Detail: { required: false, type: () => [Object] } } }], [import("./modules/invoice/invoice.entity"), { "InvoiceEntity": { Code: { required: false, type: () => Number }, Type: { required: false, type: () => String }, SanadCode: { required: false, type: () => Number }, CustomerName: { required: false, type: () => String }, customerCodeC: { required: false, type: () => String }, Date: { required: false, type: () => String }, Time: { required: false, type: () => String }, SumNaghd: { required: false, type: () => Number }, SumCard: { required: false, type: () => Number }, SumNesiyeh: { required: false, type: () => Number }, SumDiscount: { required: false, type: () => Number }, SumCheck: { required: false, type: () => Number }, SumLevy: { required: false, type: () => Number }, SumScot: { required: false, type: () => Number }, SumPrice: { required: false, type: () => Number }, ErpCode: { required: false, type: () => String }, CustomerErpCode: { required: false, type: () => String }, TypeName: { required: false, type: () => String }, totalPrice: { required: false, type: () => Number }, VasetErpCode: { required: false, type: () => String }, Detail: { required: true, type: () => [Object] } } }], [import("./modules/invoice/dtos/create-invoice.dto"), { "CreateInvoiceDto": { preInvoiceId: { required: true, type: () => String } } }], [import("./common/dto/page-options.dto"), { "PageOptionsDto": { order: { required: true, enum: t["./constants/order"].Order }, page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, q: { required: false, type: () => String } } }], [import("./common/dto/page-meta.dto"), { "PageMetaDto": { page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, itemCount: { required: true, type: () => Number }, pageCount: { required: true, type: () => Number }, hasPreviousPage: { required: true, type: () => Boolean }, hasNextPage: { required: true, type: () => Boolean } } }], [import("./common/dto/create-translation.dto"), { "CreateTranslationDto": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode }, text: { required: true, type: () => String } } }], [import("./common/dto/page.dto"), { "PageDto": { data: { required: true }, meta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto } } }], [import("./modules/auth/dto/user-register.dto"), { "UserRegisterDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phone: { required: false, type: () => String } } }], [import("./modules/user/dtos/users-page-options.dto"), { "UsersPageOptionsDto": {} }]], "controllers": [[import("./modules/user/user.controller"), { "UserController": { "getCurrentSellerUsers": { type: [t["./modules/user/dtos/user.dto"].UserDto] }, "filterUsers": { type: [t["./modules/user/dtos/user.dto"].UserDto] } } }], [import("./modules/holoo/holoo.controller"), { "HolooController": { "getProduct": { type: t["./modules/holoo/dtos/holoo-product.dto"].HolooProductDto }, "getProducts": { type: Object }, "filterCustomer": { type: Object }, "getCustomers": { type: Object }, "getCostumerAddress": { type: Object }, "getSellers": { type: Object } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "userRegister": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "getCurrentUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/health-checker/health-checker.controller"), { "HealthCheckerController": { "check": { type: Object } } }], [import("./modules/pre-invoice/pre-invoice.controller"), { "PreInvoiceController": { "addPreInvoice": { type: t["./modules/pre-invoice/dtos/pre-invoice.dto"].PreInvoiceDto }, "getPreInvoices": { type: [t["./modules/pre-invoice/dtos/pre-invoice.dto"].PreInvoiceDto] }, "getPreInvoice": { type: t["./modules/pre-invoice/dtos/pre-invoice.dto"].PreInvoiceDto }, "deletePreInvoice": { type: Boolean }, "getAllPreInvoices": { type: [t["./modules/pre-invoice/dtos/pre-invoice.dto"].PreInvoiceDto] } } }], [import("./modules/invoice/invoice.controller"), { "InvoiceController": { "createInvoice": { type: t["./modules/invoice/dtos/invoice.dto"].InvoiceDto }, "getInvoices": { type: [t["./modules/invoice/dtos/invoice.dto"].InvoiceDto] }, "getInvoice": { type: t["./modules/invoice/dtos/invoice.dto"].InvoiceDto } } }]] } };
};